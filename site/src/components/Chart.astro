---

---

<script>
	import Chart from "chart.js/auto";

	const chartElement = document.getElementById("chart");
	let myChart;

	if (chartElement) {
		const ctx = (chartElement as HTMLCanvasElement).getContext("2d");
		if (ctx) {
			myChart = new Chart(ctx, {
				type: "bar",
				data: {
					labels: [
						"Right",
						"Left",
						"Center",
						"Orthodox",
						"Arab-Israel",
						"Micro",
					],
					datasets: [
						{
							data: [0, 0, 0, 0, 0, 0],
							backgroundColor: [
								"rgba(59, 130, 246)",
								"rgba(239, 68, 68)",
								"rgba(234, 179, 8)",
								"rgba(249, 115, 22)",
								"rgba(34, 197, 94)",
								"rgba(168, 85, 247)",
							],
						},
					],
				},
				options: {
					scales: {
						y: {
							beginAtZero: true,
							max: 100,
							title: {
								display: true,
								text: "Percentage",
								font: { size: 16, family: "Inter" },
							},
							ticks: {
								callback: (value) => `${value}%`,
								font: { size: 16, family: "Inter" },
							},
						},
						x: {
							title: {
								display: true,
								text: "Bloc",
								font: { size: 16, family: "Inter" },
							},
							ticks: { font: { size: 16, family: "Inter" } },
						},
					},
					plugins: {
						title: {
							display: true,
							text: "Bloc Percentage at Polling Station",
							font: { size: 16, family: "Inter" },
							padding: { bottom: 20 },
						},
						legend: { display: false },
						tooltip: {
							callbacks: {
								label: (context) =>
									context.parsed.y !== null
										? `${context.parsed.y}%`
										: "",
							},
							titleFont: {
								size: 16,
								family: "Inter",
							},
							bodyFont: {
								size: 16,
								family: "Inter",
							},
							usePointStyle: true,
							boxPadding: 5,
						},
					},
					elements: { bar: { borderRadius: 2 } },
				},
			});
		}
	}

	type Data = {
		l: number;
		r: number;
		c: number;
		o: number;
		a: number;
		m: number;
	};

	window.updateChartData = function (data: Data) {
		if (myChart) {
			// Calculate the total sum of all categories
			const total = data.l + data.r + data.c + data.o + data.a + data.m;

			// Define an array with keys in the specific order
			const keys: (keyof Data)[] = ["r", "l", "c", "o", "a", "m"];
			let percentages: string[] = [];

			// Calculate the percentage for each category in the specified order
			keys.forEach((key) => {
				percentages.push(
					total > 0 ? ((data[key] / total) * 100).toFixed(1) : "0.0"
				);
			});

			// Update the chart data with the calculated percentages
			myChart.data.datasets[0].data = percentages;
			myChart.update();
		}
	};
</script>
